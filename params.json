{
  "name": "The Internship",
  "tagline": "since September 2016",
  "body": "Gaby's Internship\r\n===========================\r\n\r\nGaby is a senior at McGill University studying Computer Science and International Development Studies. This September she started an internship and is working with the IT Team of C y l i x T e c h n o l o g i e s, Inc.  It is one of the market leaders, as well as one of the fastest growing companies in the **Security and Surveillance Technology Industry** in the Philippines.\r\n\r\n\r\nDay 1: ERP next and Frappe\r\n------------------------------\r\n*Sept 26, 2016*\r\n\r\n---\r\n\r\n\r\n\r\nDuring my internship, I intend to put into practice the skills and knowledge I have acquired from school in a real-life working environment. I also intend to form the habit of documenting my progress through this blog.\r\n\r\nMy goal at the end of this internship is to gain new experiences and insights and to broaden my horizons in terms of my professional career.\r\n\r\nI will primarily be working with the **ERPnext and Frappe** frameworks and developing in Python.\r\n\r\n* **ERPNext** is a free and open-source integrated **Enterprise Resource Planning (ERP)** software for the web developed by *Frappé Technologies Pvt. Ltd.* and is built on **MariaDB** database system using a **Python** based server-side framework. \r\n\r\n* **Frappé**  is the Rapid Application Development Framework in Python & JS used to build ERPNext.\r\n\r\n### How to install ERPnext\r\n\r\nTo run ERPnext I had to download **Oracle's VirtualBox** in order to run Ubuntu Linux on a virtual machine which now lives inside my laptop.\r\n\r\n* [virtualbox.com]() \r\n\r\nI then mounted the ERPnext iso image file into the virtual machine.\r\n\r\nWhen VirtualBox Boots, login using user: frappe and password: frappe\r\n\r\nAfterwards, input the followings command in order to start Frappe Bench. This step initializes an instance of ERPnext and pushes it onto the local server website.\r\n\r\n\tcd frappe-bench\r\n\tbench start\r\n\r\nThen, on the HOST machine (mine is Windows 10), use the browser and go to:\r\n\r\n* [http://localhost 8080]()\r\n\r\nand login using:\r\n\r\n* user: Administrator\r\n* password: admin // changed to frappe\r\n\r\n### Commands I used/learned today:\r\n\r\n\tifconfig | grep HWaddr --> Linux, specifically returns MAC address\r\n\r\n\tipconfig --> Windows\r\n\r\n\tping google.com --> to check there is an active internet connection\r\n\tping facebook.com\r\n\r\n\tCtrl + C --> to exit a particular command in terminal/cmdline\r\n\r\nDay 2: ERPnext and Frappe\r\n------------------------------\r\n*Sept 27, 2016*\r\n\r\n---\r\n\r\nNow that I have a working ERPNext instance, I can play around with it and start developing modules.\r\n\r\nI started out by generating random data to fill my sample database. For this I created my own mock up company, \"Intergalactic Robotics, Inc.\", \r\n\r\n### Introduction to ERPnext Module Development\r\n\r\n#### Making a new App \r\nTo make a new application, go to your bench folder and run, `bench new-app {app_name}` and fill in details about the application. This will create a boilerplate application for you.\r\n\r\n\tbench new-app [appName]\r\n\tbench new-app library_management\r\n\r\n#### Setting up the Site \r\n\t\r\n\tbench new-site [siteName]\r\n\tbench new-site library\r\n\r\n#### Installing app\r\n\r\n\tbench use [siteName] // to set the default site\r\n\r\n\tbench --site [siteName] install-app [appName]\r\n\tbench --site library_management install-app library\r\n\r\nAfter installing the app, it is ready to be run. \r\n\r\n\tbench start\r\n\r\nIn order to fully customize and create my app, I had to switch on developer mode to \"1\". This setting is located in \r\n\r\n\tsites/library/sites_config.json\r\n\r\nAlternatively, one can also execute:\r\n\r\n\tbench --site [siteName] set-config developer_mode 1\r\n\tbench --site library set-config developer_mode 1\r\n\r\n#### Creating Roles\r\nBefore creating Models, I created Roles so that I can set permissions on the Model. There are two Roles I created for my Library Management System:\r\n\r\n- Librarian\r\n- Library Member\r\n\r\nTo create a new Role, go to:\r\n\r\n\tSetup > Users > Role > New\r\n\r\n#### DocType\r\nAfter creating the Roles, I created the DocTypes.\r\n\r\nTo create a new DocType, go to:\r\n\r\n\tDeveloper > Documents > Doctype > New\r\n\r\nMy new `DocTypes` are:\r\n\r\n- Article \r\n- Library Member\r\n- Library Transaction\r\n- Library Membership\r\n\r\nEach `DocType` was assigned `fields`, specific naming conventions, and search fields so it can become searchable.\r\n\r\n### Commands I used/learned today:\r\n\r\n\tbench --reinstall // this clears the database to give the app a fresh reset\r\n\r\n\tbench --site [siteName] uninstall-app [appName]\r\n\r\n\tvi [fileName] \r\n\r\n\tto enter insert mode: `i` or `a`, to save and exit: `ESC` + wq\r\n\r\n\tls -a // to check if swap (.swp) files or other hidden files are in the folder\r\n\r\n\trm [fileName] // remove the file (delete)\r\n\r\n\r\nDay 3: Python and WordPress\r\n------------------------------\r\n*Sept 28, 2016*\r\n\r\n---\r\n\r\n### Learning Python\r\n\r\n#### Task # 1: if-else statements\r\nGiven an integer, , perform the following conditional actions:\r\n\r\n- If  is odd, print Weird\r\n- If  is even and in the inclusive range of  to , print Not Weird\r\n- If  is even and in the inclusive range of  to , print Weird\r\n- If  is even and greater than , print Not Weird\r\n\r\n`Sample: Input = 3, Output = Weird`\r\n\r\n\t#!/bin/python\r\n\r\n\timport sys\r\n\r\n\r\n\tN = int(raw_input().strip())\r\n\tif (N % 2 == 0):\r\n   \t\t if (N > 20) or (N > 1) and (N < 5):\r\n        \t\t\tprint(\"Not Weird\")\r\n \t\t elif (N > 5) and (N < 21):\r\n  \t\t\tprint(\"Weird\")\r\n\t\telse:\r\n   \t\t\tprint(\"Weird\")\r\n\r\n#### Task #2: read and calculate\r\n\r\nRead two integers from `STDIN` and print three lines where:\r\n\r\nThe first line contains the sum of the two numbers.\r\nThe second line contains the difference of the two numbers (first - second).\r\nThe third line contains the product of the two numbers.\r\n\r\n\r\n\tA = input()\r\n\tB = input()\r\n\tprint(A+B)\r\n\tprint(A-B)\r\n\tprint(A*B)\r\n\r\n\r\n#### Task #3: division\r\n\r\nRead two integers and print two lines. The first line should contain integer division,  `//` . The second line should contain float division,  `/` .\r\n\r\n\tfrom __future__ import division # ! THIS LINE IS IMPORTANT !\r\n\tA=input()\r\n\tB=input()\r\n\tprint(A//B) # integer division\r\n\tprint(A/B) # float division\r\n\r\n\r\n\r\n### Exploring WordPress\r\n\r\nWordPress is web software that is used to create websites, blogs, or apps. Since the core software of WordPress is built by hundreds of community volunteers, it allows users to transform their sites into anything they can imagine using the thousands of plugins and themes available.\r\n\r\nDay 4 and 5:\r\n------------------------------\r\n*Sept 29-30, 2016*\r\n\r\n---\r\n\r\n\r\n###What is ERP and Why is it important?\r\n\r\n#### Among other things, ERPNext can:\r\n \r\n- Track all Invoices and Payments.\r\n- Know what quantity of which product is available in stock.\r\n- Identify and track your key performance indicators (KPI's).\r\n- Identify open customer queries.\r\n- Manage payroll.\r\n- Assign tasks and follow up on them.\r\n- Maintain a database of all your customers, suppliers and their contacts.\r\n- Prepare quotes.\r\n- Tracking your budgets and spending\r\n- Determine effective selling price based on the actual raw material, machinery and effort cost.\r\n- Get reminders on maintenance schedules.\r\n- Publish your website.\r\n\r\n#### Other open source ERPs:\r\n\r\n- Odoo\r\n- OpenBravo\r\n- Apache OfBiz\r\n- xTuple\r\n- Compiere (and forks)\r\n\r\n#### Test Phase\r\n\r\n1. [Read the Manual](http://frappe.github.io/erpnext/user/manual/)\r\n- Create a free account at [https://erpnext.com](https://erpnext.com) (the easiest way to experiment).\r\n- Create your first Customer, Supplier and Item. Add a few more so you get familiar with them.\r\n- Create Customer Groups, Item Groups, Warehouses, Supplier Groups, so that you can classify your Items.\r\n- Complete a standard sales cycle - Lead > Opportunity > Quotation > Sales Order > Delivery Note > Sales Invoice > Payment (Journal Entry)\r\n- Complete a standard purchase cycle - Material Request > Purchase Order > Purchase Receipt > Payment (Journal Entry).\r\n- Complete a manufacturing cycle (if applicable) - BOM > Production Planning Tool > Production Order > Material Issue\r\n- Replicate a real life scenario into the system.\r\n- Create custom fields, print formats etc as required.\r\n\r\nWeek 2\r\n------------------------------\r\n*Oct 03, 2016*\r\n\r\n---\r\n\r\n#### What I plan to do and achieve this week\r\n\r\n- ERP for Cocoro Sugar (ERP next)\r\n- Website (web store) for Go E Yoga\r\n\t- [https://go-e-yoga-towels.myshopify.com/](https://go-e-yoga-towels.myshopify.com/)\r\n\t- Options: \r\n\t\t- Squarespace\r\n\t\t- Shopify\r\n\t\t- Square\r\n\t- Create mockups and samples\r\n\t- Find out about pricing\r\n- Explore WordPress plugins\r\n\t- email integration\r\n\t- taking payments\r\n\t- Google Maps\r\n\t- delivery/shipping services\r\n- Cylix Intranet site improvements\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}