{
  "name": "The Internship",
  "tagline": "since September 2016",
  "body": "Gaby's Internship at Cylix Technologies\r\n===========================\r\n\r\nGaby is a senior at McGill University studying Computer Science and International Development Studies. This September she started an internship and is working with the IT Team of Cylix Technologies, Inc.  It is one of the market leaders, as well as one of the fastest growing companies in the **Security and Surveillance Technology Industry** in the Philippines.\r\n\r\n\r\nDay 1: ERPnext and Frappe\r\n------------------------------\r\n*Sept 26, 2016*\r\n\r\n---\r\n\r\n\r\n\r\nDuring my internship, I intend to put into practice the skills and knowledge I have acquired from school in a real-life working environment. I also intend to form the habit of documenting my progress through this blog.\r\n\r\nMy goal at the end of this internship is to gain new experiences and insights and to broaden my horizons in terms of my professional career.\r\n\r\nI will primarily be working with the **ERPnext and Frappe** frameworks and developing in Python.\r\n\r\n* **ERPNext** is a free and open-source integrated **Enterprise Resource Planning (ERP)** software for the web developed by *Frappé Technologies Pvt. Ltd.* and is built on **MariaDB** database system using a **Python** based server-side framework. \r\n\r\n* **Frappé**  is the Rapid Application Development Framework in Python & JS used to build ERPNext.\r\n\r\n### How to install ERPnext\r\n\r\nTo run ERPnext I had to download **Oracle's VirtualBox** in order to run Ubuntu Linux on a virtual machine which now lives inside my laptop.\r\n\r\n* [virtualbox.com]() \r\n\r\nI then mounted the ERPnext iso image file into the virtual machine.\r\n\r\nWhen VirtualBox Boots, login using user: frappe and password: frappe\r\n\r\nAfterwards, input the followings command in order to start Frappe Bench. This step initializes an instance of ERPnext and pushes it onto the local server website.\r\n\r\n\tcd frappe-bench\r\n\tbench start\r\n\r\nThen, on the HOST machine (mine is Windows 10), use the browser and go to:\r\n\r\n* [http://localhost 8080]()\r\n\r\nand login using:\r\n\r\n* user: Administrator\r\n* password: admin // changed to frappe\r\n\r\n### Commands I used/learned today:\r\n\r\n\tifconfig | grep HWaddr --> Linux, specifically returns MAC address\r\n\r\n\tipconfig --> Windows\r\n\r\n\tping google.com --> to check there is an active internet connection\r\n\tping facebook.com\r\n\r\n\tCtrl + C --> to exit a particular command in terminal/cmdline\r\n\r\nDay 2: ERPnext and Frappe\r\n------------------------------\r\n*Sept 27, 2016*\r\n\r\n---\r\n\r\nNow that I have a working ERPNext instance, I can play around with it and start developing modules.\r\n\r\nI started out by generating random data to fill my sample database. For this I created my own mock up company, \"Intergalactic Robotics, Inc.\", \r\n\r\n### Introduction to ERPnext Module Development\r\n\r\n#### Making a new App \r\nTo make a new application, go to your bench folder and run, `bench new-app {app_name}` and fill in details about the application. This will create a boilerplate application for you.\r\n\r\n\tbench new-app [appName]\r\n\tbench new-app library_management\r\n\r\n#### Setting up the Site \r\n\t\r\n\tbench new-site [siteName]\r\n\tbench new-site library\r\n\r\n#### Installing app\r\n\r\n\tbench use [siteName] // to set the default site\r\n\r\n\tbench --site [siteName] install-app [appName]\r\n\tbench --site library_management install-app library\r\n\r\nAfter installing the app, it is ready to be run. \r\n\r\n\tbench start\r\n\r\nIn order to fully customize and create my app, I had to switch on developer mode to \"1\". This setting is located in \r\n\r\n\tsites/library/sites_config.json\r\n\r\nAlternatively, one can also execute:\r\n\r\n\tbench --site [siteName] set-config developer_mode 1\r\n\tbench --site library set-config developer_mode 1\r\n\r\n#### Creating Roles\r\nBefore creating Models, I created Roles so that I can set permissions on the Model. There are two Roles I created for my Library Management System:\r\n\r\n- Librarian\r\n- Library Member\r\n\r\nTo create a new Role, go to:\r\n\r\n\tSetup > Users > Role > New\r\n\r\n#### DocType\r\nAfter creating the Roles, I created the DocTypes.\r\n\r\nTo create a new DocType, go to:\r\n\r\n\tDeveloper > Documents > Doctype > New\r\n\r\nMy new `DocTypes` are:\r\n\r\n- Article \r\n- Library Member\r\n- Library Transaction\r\n- Library Membership\r\n\r\nEach `DocType` was assigned `fields`, specific naming conventions, and search fields so it can become searchable.\r\n\r\n### Commands I used/learned today:\r\n\r\n\tbench --reinstall // this clears the database to give the app a fresh reset\r\n\r\n\tbench --site [siteName] uninstall-app [appName]\r\n\r\n\tvi [fileName] \r\n\r\n\tto enter insert mode: `i` or `a`, to save and exit: `ESC` + wq\r\n\r\n\tls -a // to check if swap (.swp) files or other hidden files are in the folder\r\n\r\n\trm [fileName] // remove the file (delete)",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}